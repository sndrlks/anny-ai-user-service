# .github/workflows/ci.yml
name: CI

# Triggers: Run on push to main and on pull requests targeting main
on:
  push:
    branches: [ main ]

jobs:
  build:
    # The job will run on a GitHub-hosted Ubuntu runner
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout your repository code
      - name: Checkout Code
        uses: actions/checkout@v3
        # This action clones your repo into the runner so subsequent steps can work with your code

      # Step 2: Set up JDK 17 using a pre-built action
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
        # 'temurin' is one of the distributions available. This step makes sure the correct JDK is installed.

      # Step 3: Cache Gradle dependencies
      - name: Cache Gradle dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: ${{ runner.os }}-gradle
        # Caching helps speed up subsequent builds by reusing previously downloaded dependencies.

      # Step 4: Build and test the project using Gradle
      - name: Build with Gradle
        run: ./gradlew build --no-daemon -x test
        # This command runs your Gradle wrapper to build the project and run tests.

  docker:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Build Docker Image
        run: docker build -t anny-ai-user-service:latest .

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push Docker Image
        run: docker push anny-ai-user-service:latest
